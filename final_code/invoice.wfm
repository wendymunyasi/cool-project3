/*
   ----------------------------------------------------------------------------
   invoice.wfm
   A more complex form to deal with invoicing for:
   
   The dBASE Plus Tutorial: Developing An Application
   January, 2017, Ken Mayer
   
   Permission is granted to use this in your own applications, with the caveat
   that credit be given appropriately.
   ----------------------------------------------------------------------------
*/
** END HEADER -- do not remove this line
//
// Generated on 01/12/2017
//
parameter bModal
local f
f = new invoiceForm()
if (bModal)
   f.mdi = false // ensure not MDI
   f.readModal()
else
   f.open()
endif

class invoiceForm of BASECFORM from :DT_Custom:base.cfm
   set procedure to :FormControls:seeker.cc additive
   set procedure to invoice.dmd additive
   set procedure to :DT_Custom:MyControls.cc additive
   with (this)
      onOpen = class::FORM_ONOPEN
      height = 502.0
      left = 139.0
      top = 22.0
      width = 673.0
      text = "Invoices"
   endwith

   this.INVOICEDATAMODULE1 = new INVOICEDATAMODULE()
   this.INVOICEDATAMODULE1.parent = this
   with (this.INVOICEDATAMODULE1)
      left = 524.0
      top = 179.0
   endwith

   with (this.MYTITLETEXT1)
      text = "Invoices"
   endwith

   this.MYTEXTLABEL1 = new MYTEXTLABEL(this)
   with (this.MYTEXTLABEL1)
      height = 22.0
      left = 221.0
      top = 35.0
      width = 76.0
      text = "Customers:"
   endwith

   this.SEEKER1 = new SEEKER(this)
   with (this.SEEKER1)
      height = 22.0
      left = 303.0
      top = 33.0
      width = 184.0
   endwith

   this.MYGRID1 = new MYGRID(this)
   with (this.MYGRID1)
      dataLink = form.invoicedatamodule1.customer1.rowset
      columns["COLUMN1"] = new GRIDCOLUMN(form.MYGRID1)
      with (columns["COLUMN1"])
         dataLink = form.invoicedatamodule1.customer1.rowset.fields["last name"]
         editorType = 1	// EntryField
         width = 195.0
      endwith
      columns["COLUMN2"] = new GRIDCOLUMN(form.MYGRID1)
      with (columns["COLUMN2"])
         dataLink = form.invoicedatamodule1.customer1.rowset.fields["first name"]
         editorType = 1	// EntryField
         width = 191.0
      endwith
      columns["COLUMN3"] = new GRIDCOLUMN(form.MYGRID1)
      with (columns["COLUMN3"])
         dataLink = form.invoicedatamodule1.customer1.rowset.fields["city"]
         editorType = 1	// EntryField
         width = 200.0
      endwith
      with (columns["COLUMN1"].headingControl)
         value = "Last Name"
      endwith

      with (columns["COLUMN2"].headingControl)
         value = "First Name"
      endwith

      with (columns["COLUMN3"].headingControl)
         value = "City"
      endwith

      height = 103.0
      left = 20.0
      top = 61.0
      width = 630.0
   endwith

   this.INVOICESCONTAINER = new MYCONTAINER(this)
   with (this.INVOICESCONTAINER)
      left = 173.0
      top = 170.0
      width = 325.0
      height = 140.0
      borderStyle = 4	// Single
   endwith

   this.INVOICESCONTAINER.MYTEXTLABEL1 = new MYTEXTLABEL(this.INVOICESCONTAINER)
   with (this.INVOICESCONTAINER.MYTEXTLABEL1)
      height = 22.0
      left = 5.0
      top = 13.0
      width = 61.0
      text = "Invoices:"
      pageno = 0
   endwith

   this.INVOICESCONTAINER.INVOICEBTNCONTAINER = new MYCONTAINER(this.INVOICESCONTAINER)
   with (this.INVOICESCONTAINER.INVOICEBTNCONTAINER)
      left = 70.0
      top = 6.0
      width = 132.0
      height = 33.0
      borderStyle = 3	// None
      pageno = 0
   endwith

   this.INVOICESCONTAINER.INVOICEBTNCONTAINER.ADDINVOICE = new MYPUSHBUTTON(this.INVOICESCONTAINER.INVOICEBTNCONTAINER)
   with (this.INVOICESCONTAINER.INVOICEBTNCONTAINER.ADDINVOICE)
      onClick = class::ADDINVOICE_ONCLICK
      height = 32.0
      left = 2.0
      top = 1.0
      width = 32.0
      text = ""
      speedBar = false
      upBitmap = "filename :Glyfx:\Aero\CE\Dbase Aero\PNG\24x24\favourites_24.png"
      bitmapAlignment = 0	// Default
      scaleBitmaps = false
      speedTip = "Add an Invoice"
      pageno = 0
   endwith

   this.INVOICESCONTAINER.INVOICEBTNCONTAINER.EDITINVOICE = new MYPUSHBUTTON(this.INVOICESCONTAINER.INVOICEBTNCONTAINER)
   with (this.INVOICESCONTAINER.INVOICEBTNCONTAINER.EDITINVOICE)
      onClick = class::EDITINVOICE_ONCLICK
      height = 32.0
      left = 34.0
      top = 1.0
      width = 32.0
      text = ""
      upBitmap = "filename :Glyfx:\Aero\CE\Dbase Aero\PNG\24x24\document_open_24.png"
      speedTip = "Edit this Invoice"
      pageno = 0
   endwith

   this.INVOICESCONTAINER.INVOICEBTNCONTAINER.DELETEINVOICE = new MYPUSHBUTTON(this.INVOICESCONTAINER.INVOICEBTNCONTAINER)
   with (this.INVOICESCONTAINER.INVOICEBTNCONTAINER.DELETEINVOICE)
      onClick = class::DELETEINVOICE_ONCLICK
      height = 32.0
      left = 66.0
      top = 1.0
      width = 32.0
      text = ""
      upBitmap = "filename :Glyfx:\Aero\CE\Dbase Aero\PNG\24x24\delete_24.png"
      speedTip = "Delete this Invoice"
      pageno = 0
   endwith

   this.INVOICESCONTAINER.INVOICEBTNCONTAINER.PRINTINVOICE = new MYPUSHBUTTON(this.INVOICESCONTAINER.INVOICEBTNCONTAINER)
   with (this.INVOICESCONTAINER.INVOICEBTNCONTAINER.PRINTINVOICE)
      onClick = class::PRINTINVOICE_ONCLICK
      height = 32.0
      left = 99.0
      top = 1.0
      width = 32.0
      text = ""
      upBitmap = "filename :Glyfx:\Aero\CE\Dbase Aero\PNG\24x24\print_24.png"
      speedTip = "Print this Invoice"
      pageno = 0
   endwith

   this.INVOICESCONTAINER.MYGRID1 = new MYGRID(this.INVOICESCONTAINER)
   with (this.INVOICESCONTAINER.MYGRID1)
      dataLink = form.invoicedatamodule1.invoice1.rowset
      columns["COLUMN1"] = new GRIDCOLUMN(form.INVOICESCONTAINER.MYGRID1)
      with (columns["COLUMN1"])
         dataLink = form.invoicedatamodule1.invoice1.rowset.fields["invoice id"]
         editorType = 1	// EntryField
         width = 87.0
      endwith
      columns["COLUMN2"] = new GRIDCOLUMN(form.INVOICESCONTAINER.MYGRID1)
      with (columns["COLUMN2"])
         dataLink = form.invoicedatamodule1.invoice1.rowset.fields["order date"]
         editorType = 3	// SpinBox
         width = 110.0
      endwith
      with (columns["COLUMN1"].headingControl)
         value = "Invoice ID"
      endwith

      with (columns["COLUMN2"].editorControl)
         rangeMax = {03/20/1998}
         rangeMin = {12/10/1997}
      endwith

      with (columns["COLUMN2"].headingControl)
         value = "Order Date"
      endwith

      vScrollBar = 1	// On
      pageno = 0
      height = 92.0
      left = 39.0
      top = 42.0
      width = 242.0
   endwith

   this.LINEITEMCONTAINER = new MYCONTAINER(this)
   with (this.LINEITEMCONTAINER)
      left = 74.0
      top = 318.0
      width = 526.0
      height = 173.0
   endwith

   this.LINEITEMCONTAINER.MYTEXTLABEL1 = new MYTEXTLABEL(this.LINEITEMCONTAINER)
   with (this.LINEITEMCONTAINER.MYTEXTLABEL1)
      height = 22.0
      left = 134.0
      top = 12.0
      width = 87.0
      text = "Line Items:"
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER = new MYCONTAINER(this.LINEITEMCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER)
      left = 225.0
      top = 7.0
      width = 99.0
      height = 34.0
      borderStyle = 3	// None
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER.ADDLINEITEM = new MYPUSHBUTTON(this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER.ADDLINEITEM)
      onClick = class::ADDLINEITEM_ONCLICK
      height = 32.0
      left = 2.0
      top = 1.0
      width = 32.0
      text = ""
      upBitmap = "filename :Glyfx:\Aero\CE\Dbase Aero\PNG\24x24\favourites_24.png"
      speedTip = "Add New Line Item"
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER.EDITLINEITEM = new MYPUSHBUTTON(this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER.EDITLINEITEM)
      onClick = class::EDITLINEITEM_ONCLICK
      height = 32.0
      left = 34.0
      top = 1.0
      width = 32.0
      text = ""
      upBitmap = "filename :Glyfx:\Aero\CE\Dbase Aero\PNG\24x24\document_open_24.png"
      speedTip = "Edit This Line Item"
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER.DELETELINEITEM = new MYPUSHBUTTON(this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBTNCONTAINER.DELETELINEITEM)
      onClick = class::DELETELINEITEM_ONCLICK
      height = 32.0
      left = 66.0
      top = 1.0
      width = 32.0
      text = ""
      upBitmap = "filename :Glyfx:\Aero\CE\Dbase Aero\PNG\24x24\delete_24.png"
      speedTip = "Delete This Line item"
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.MYGRID1 = new MYGRID(this.LINEITEMCONTAINER)
   with (this.LINEITEMCONTAINER.MYGRID1)
      dataLink = form.invoicedatamodule1.lineitem1.rowset
      columns["COLUMN1"] = new GRIDCOLUMN(form.LINEITEMCONTAINER.MYGRID1)
      with (columns["COLUMN1"])
         dataLink = form.invoicedatamodule1.lineitem1.rowset.fields["item id"]
         editorType = 4	// ComboBox
         width = 400.0
      endwith
      columns["COLUMN2"] = new GRIDCOLUMN(form.LINEITEMCONTAINER.MYGRID1)
      with (columns["COLUMN2"])
         dataLink = form.invoicedatamodule1.lineitem1.rowset.fields["qty"]
         editorType = 3	// SpinBox
         width = 59.0
      endwith
      with (columns["COLUMN1"].editorControl)
         style = 1	// DropDownList
         dropDownHeight = 132.0
      endwith

      with (columns["COLUMN1"].headingControl)
         value = "Description"
      endwith

      with (columns["COLUMN2"].editorControl)
         picture = "999"
         rangeMax = 100
         rangeMin = 1
      endwith

      with (columns["COLUMN2"].headingControl)
         value = "Qty"
      endwith

      vScrollBar = 1	// On
      pageno = 0
      height = 124.0
      left = 10.0
      top = 42.0
      width = 504.0
   endwith

   this.rowset = this.invoicedatamodule1.customer1.rowset

   function ADDINVOICE_onClick()
      local fInvoice
      set procedure to invoiceEdit.wfm 
      fInvoice = new InvoiceEditForm()
      // add a custom property (note that the
      // form.rowset is pointing to the customer rowset)
      fInvoice.CustomerID = form.rowset.fields["customer id"].value
      // let the invoice form know we're in "Append" mode
      fInvoice.Mode = "Append"
      // open the form:
      fInvoice.readModal()
      // close the procedure file:
      close procedure invoiceEdit.wfm
      if form.invoicedatamodule1.lineitem1.rowset.endOfSet
         // go to last row, which is the one we just added
         form.invoicedatamodule1.invoice1.rowset.last()
         // because an invoice is useless without a line item
         class::AddLineItem_onClick()
      endif
      // refresh the controls on screen ...
      form.invoicedatamodule1.invoice1.rowset.refreshControls()
   return

   function ADDLINEITEM_onClick()
      local fLineItem
      // don't allow it if there's no invoice:
      if not form.INVOICEDATAMODULE1.invoice1.rowset.endOfSet
         set procedure to LineItemEdit.wfm
         fLineItem = new LineItemEditForm()
         // add some custom properties:
         fLineItem.Mode = "Append"
         fLineItem.InvoiceID = ;
           form.INVOICEDATAMODULE1.invoice1.rowset.fields["Invoice ID"].value
         // open the form:
         fLineItem.readModal()
         close procedure LineItemEdit.wfm
         form.INVOICEDATAMODULE1.lineitem1.rowset.last()
         form.INVOICEDATAMODULE1.lineitem1.rowset.refreshControls()
      else
         msgbox( "There is no invoice to assign line items to!", ;
                         "Can't do that!", 16 )
      endif
   return

   function DELETEINVOICE_onClick()
      // Check to make sure we have a row to edit:
      if not form.invoicedatamodule1.invoice1.rowset.endOfSet
         local fInvoice
         set procedure to invoiceEdit.wfm additive
         fInvoice = new InvoiceEditForm()
         // add some custom properties:
         fInvoice.CustomerID = form.rowset.fields["customer id"].value
         fInvoice.InvoiceID  = ;
            form.invoicedatamodule1.invoice1.rowset.fields["Invoice ID"].value
         fInvoice.Mode = "Edit"
         // open the form ...
         fInvoice.readModal()
         close procedure invoiceEdit.wfm
         form.invoicedatamodule1.invoice1.rowset.refreshControls()
      else
         msgbox( "There is nothing to edit!", "Can't do that!", 16 )
      endif
   return

   function DELETELINEITEM_onClick()
      // shorten the rowset reference:
      r = form.invoicedatamodule1.LineItem1.rowset
      // check for endOfSet
      if r.endOfSet
         msgbox( "Cannot delete -- there are no rows to delete!",;
                 "Can't do it!", 16 )
      else
         // otherwise check to see if they really want to
         // delete this row!
         if ( MSGBOX("You are about to delete the current row." ;
                    + CHR(13) ;
                    + "Click Yes to delete the current row.", ;
                      "Alert", 4) == 6 )

            // delete it:
            r.delete()

            // move to previous row, unless we're at
            // the first one, and then step off
            // the endOfSet marker ...
            if ( r.next( -1 ) )
               r.next()
            endif
         endif
      endif
   return

   function EDITINVOICE_onClick()
      // Check to make sure we have a row to edit:
      if not form.invoicedatamodule1.invoice1.rowset.endOfSet
         local fInvoice
         set procedure to invoiceEdit.wfm additive
         fInvoice = new InvoiceEditForm()
         // add some custom properties:
         fInvoice.CustomerID = form.rowset.fields["customer id"].value
         fInvoice.InvoiceID  = ;
            form.invoicedatamodule1.invoice1.rowset.fields["Invoice ID"].value
         fInvoice.Mode = "Edit"
         // open the form ...
         fInvoice.readModal()
         close procedure invoiceEdit.wfm
         form.invoicedatamodule1.invoice1.rowset.refreshControls()
      else
         msgbox( "There is nothing to edit!", "Can't do that!", 16 )
      endif
   return

   function EDITLINEITEM_onClick()
      local rLineItem
      // Check to make sure we have a row to edit:
      rLineItem = form.invoicedatamodule1.lineItem1.rowset
      if not rLineItem.endOfSet
         local fLineItem
         set procedure to LineItemEdit.wfm additive
         fLineItem = new LineItemEditForm()
         // add some custom properties
         fLineItem.Mode = "Edit"
         fLineItem.InvoiceID = ;
           form.invoicedatamodule1.invoice1.rowset.fields["Invoice ID"].value
         // In the next statement, we're getting the actual
         // item ID as opposed to the description, which we'd
         // normally get if we just used the field's value
         // property ...
         fLineItem.ItemID =;
             rLineItem.fields["Item ID"].lookupRowset.fields[ 1 ].value
         // open the form ...
         fLineItem.readModal()
         close procedure LineItemEdit.wfm
         form.invoicedatamodule1.lineitem1.rowset.refreshControls()
      else
         msgbox( "There is nothing to edit!", "Can't do that!", 16 )
      endif
   return

   function PRINTINVOICE_onClick()
       // check to see if we're at the endOfSet (i.e.,
      // no invoices), otherwise we'll do the print
      // routine:
      r = form.INVOICEDATAMODULE1.invoice1.rowset
      if not r.endOfSet
         // store the primary key field needed
         // in the _app object as custom property
         _app.InvoiceID  = r.fields["Invoice ID"].value
         // Call the report with the preview form ...
         do preview.wfm with "Invoice.rep", true // modal!!
         _app.InvoiceID  = NULL // cleanup
      else
         msgbox( "There is nothing to Print!", "Can't do that!", 16 )
      endif
   return

   function form_onOpen()
      // Call the onOpen method of the dataform custom
      // form. Note we must use the Source Alias:
      set procedure to :DT_Custom:dataform.cfm additive
      dataformCForm::form_onOpen()
   return

endclass

